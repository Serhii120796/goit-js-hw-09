{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAItB,SAAuBC,GACrBA,EAAIC,iBACJ,IAAIC,EAAeC,OAAOC,EAAMC,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAOF,MAAOC,GAAK,EACtCE,EAAcF,EAAGJ,GACjBA,GAAgBC,OAAOM,EAAKJ,M,IAPhC,MAAMK,MAAEN,EAAKO,KAAEF,EAAIG,OAAEL,GAAWX,EAAKiB,SAWrC,SAASL,EAAcM,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEE,SAAAT,EAAUJ,MAAAK,GAAQ,GAE5BA,EAAM,IAIRS,MAAK,EAACD,SAAEA,EAAUb,MAAAe,MACjB/B,EAAAgC,OAAOC,QAAQ,uBAAqBJ,QAAiBE,MAAU,IAEhEG,OAAM,EAACL,SAAEA,EAAUb,MAAAmB,MAClBnC,EAAAgC,OAAOI,QAAQ,sBAAoBP,QAAeM,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handlerSubmit);\n\nconst { delay, step, amount } = form.elements;\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  let currentDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay);\n    currentDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","evt","preventDefault","currentDelay","Number","$47d4ff9957288465$var$delay","value","i","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$step","delay","step","amount","elements","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","delay2","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.7938b1c5.js.map"}